/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Defence_System.View.defences;

/**
 *
 * @author dilan
 */
import Defence_System.Util.Observable;
import javax.swing.*;
import javax.swing.event.*;
import Defence_System.Util.Observer;
import Defence_System.View.MainControler;

public class Helicopter extends JFrame implements Observer{

    /**
     * Creates new form Helicopter
     */
    private MainControler mainControler;
    private int number;
    
    public Helicopter(){
        initComponents();
    }
     
    public Helicopter(MainControler mainControler,int number) {
        this.mainControler=mainControler;
        this.number=number;
        
        initComponents();
        shoot.setEnabled(false);
        missile.setEnabled(false);
        laser.setEnabled(false);
        setTitle("Helicopter");
        setVisible(true);
    }
    
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblArea = new javax.swing.JLabel();
        shoot = new javax.swing.JButton();
        missile = new javax.swing.JButton();
        laser = new javax.swing.JButton();
        lblSoldier = new javax.swing.JLabel();
        lblAmmo = new javax.swing.JLabel();
        position = new javax.swing.JCheckBox();
        spinner02 = new javax.swing.JSpinner();
        spinner01 = new javax.swing.JSpinner();
        sliderHelicopter = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea01 = new javax.swing.JTextArea();
        txt01 = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        lblEnergyHelicopter = new javax.swing.JLabel();
        mainLbl01 = new javax.swing.JLabel();
        mainLbl02 = new javax.swing.JLabel();
        mainLbl03 = new javax.swing.JLabel();
        mainLbl04 = new javax.swing.JLabel();
        mainLbl05 = new javax.swing.JLabel();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblArea.setForeground(new java.awt.Color(255, 255, 255));
        lblArea.setText("Area Not Cleared");
        getContentPane().add(lblArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 147, 25));

        shoot.setText("Shoot");
        shoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shootActionPerformed(evt);
            }
        });
        getContentPane().add(shoot, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 79, 157, 32));

        missile.setText("Missile Operation");
        missile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                missileActionPerformed(evt);
            }
        });
        getContentPane().add(missile, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 157, 32));

        laser.setText("Laser Operation");
        laser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laserActionPerformed(evt);
            }
        });
        getContentPane().add(laser, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 129, 157, 32));

        lblSoldier.setForeground(new java.awt.Color(204, 204, 204));
        lblSoldier.setText("Soldier Count");
        getContentPane().add(lblSoldier, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 86, 28));

        lblAmmo.setForeground(new java.awt.Color(204, 204, 204));
        lblAmmo.setText(" Ammo Count");
        getContentPane().add(lblAmmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 86, 27));

        position.setText("Position");
        position.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                positionActionPerformed(evt);
            }
        });
        getContentPane().add(position, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 80, 20));

        spinner02.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinner02.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner02StateChanged(evt);
            }
        });
        getContentPane().add(spinner02, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 120, 46, 24));

        spinner01.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinner01.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner01StateChanged(evt);
            }
        });
        getContentPane().add(spinner01, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 80, 46, 24));

        sliderHelicopter.setBackground(new java.awt.Color(153, 153, 153));
        sliderHelicopter.setMajorTickSpacing(20);
        sliderHelicopter.setMinorTickSpacing(10);
        sliderHelicopter.setOrientation(javax.swing.JSlider.VERTICAL);
        sliderHelicopter.setPaintLabels(true);
        sliderHelicopter.setPaintTicks(true);
        sliderHelicopter.setSnapToTicks(true);
        sliderHelicopter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderHelicopterStateChanged(evt);
            }
        });
        getContentPane().add(sliderHelicopter, new org.netbeans.lib.awtextra.AbsoluteConstraints(643, 36, 59, 312));

        txtArea01.setColumns(20);
        txtArea01.setRows(5);
        jScrollPane1.setViewportView(txtArea01);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 460, 123));
        getContentPane().add(txt01, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 370, -1));

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        getContentPane().add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, 76, -1));

        lblEnergyHelicopter.setText("Energy");
        getContentPane().add(lblEnergyHelicopter, new org.netbeans.lib.awtextra.AbsoluteConstraints(643, 11, 59, 19));

        mainLbl01.setBackground(new java.awt.Color(0, 0, 0));
        mainLbl01.setOpaque(true);
        getContentPane().add(mainLbl01, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 60));

        mainLbl02.setBackground(new java.awt.Color(102, 102, 102));
        mainLbl02.setOpaque(true);
        getContentPane().add(mainLbl02, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 60, 220, 110));

        mainLbl03.setBackground(new java.awt.Color(153, 153, 153));
        mainLbl03.setOpaque(true);
        getContentPane().add(mainLbl03, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 380, 110));

        mainLbl04.setBackground(new java.awt.Color(51, 51, 51));
        mainLbl04.setOpaque(true);
        mainLbl04.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                mainLbl04AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        getContentPane().add(mainLbl04, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 600, 190));

        mainLbl05.setBackground(new java.awt.Color(153, 153, 153));
        mainLbl05.setOpaque(true);
        getContentPane().add(mainLbl05, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 110, 360));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shootActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_shootActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
      mainControler.setSMS(txt01.getText(),number);
    }//GEN-LAST:event_btnSendActionPerformed

    private void spinner01StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner01StateChanged
      mainControler.setSoldierCount((int)spinner01.getValue(), number);
    }//GEN-LAST:event_spinner01StateChanged

    private void spinner02StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner02StateChanged
       mainControler.setAmmoCount((int)spinner02.getValue(), number);
    }//GEN-LAST:event_spinner02StateChanged

    private void missileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_missileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_missileActionPerformed

    private void laserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_laserActionPerformed

    private void positionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_positionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_positionActionPerformed

    private void sliderHelicopterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderHelicopterStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_sliderHelicopterStateChanged

    private void mainLbl04AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_mainLbl04AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_mainLbl04AncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Helicopter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Helicopter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton laser;
    private javax.swing.JLabel lblAmmo;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblEnergyHelicopter;
    private javax.swing.JLabel lblSoldier;
    private javax.swing.JLabel mainLbl01;
    private javax.swing.JLabel mainLbl02;
    private javax.swing.JLabel mainLbl03;
    private javax.swing.JLabel mainLbl04;
    private javax.swing.JLabel mainLbl05;
    private javax.swing.JButton missile;
    private javax.swing.JCheckBox position;
    private javax.swing.JButton shoot;
    public static javax.swing.JSlider sliderHelicopter;
    private javax.swing.JSpinner spinner01;
    private javax.swing.JSpinner spinner02;
    private javax.swing.JTextField txt01;
    private javax.swing.JTextArea txtArea01;
    // End of variables declaration//GEN-END:variables

    @Override
    public void changeArea(String area) {
        lblArea.setText(area);
    }

    @Override
    public void changeSlider(int slider) {
       if(position.isSelected()){
        if(slider>=60){
            laser.setEnabled(true);
            missile.setEnabled(true);
            shoot.setEnabled(true);
        }else if(slider>=40){
            missile.setEnabled(true);
            shoot.setEnabled(true);
            laser.setEnabled(false);
        }else if(slider>=20){
            shoot.setEnabled(true);
            laser.setEnabled(false);
            missile.setEnabled(false);
        }else {
            shoot.setEnabled(false);
            laser.setEnabled(false);
            missile.setEnabled(false);
        }
       }
    }

    @Override
    public void sendMessage(String sms) {
        txtArea01.setText(sms);
        
    }

    

}
